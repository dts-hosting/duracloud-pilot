name: Build and Push Docker Images

concurrency:
  group: docker-build-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches:
      - main
    tags:
      - "v*"
    paths:
      - "Dockerfile"
      - "go.mod"
      - "go.sum"
      - ".github/workflows/docker-build-push.yml"
      - "cmd/**"
      - "internal/**"

env:
  DOCKER_REGISTRY: docker.io
  DOCKER_NAMESPACE: duracloud

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 3
      fail-fast: false
      matrix:
        function:
          - bucket-requested
          - checksum-exporter
          - checksum-failure
          - checksum-verification
          - file-deleted
          - file-uploaded

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_NAMESPACE }}/${{ matrix.function }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        timeout-minutes: 30
        with:
          context: .
          file: ./Dockerfile
          build-args: |
            FUNCTION_NAME=${{ matrix.function }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64

      - name: Image digest
        run: echo ${{ steps.build-push.outputs.digest }}

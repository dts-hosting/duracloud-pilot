name: Build and push DuraCloud function images

on:
  push:
    branches:
      - "main"
    paths:
      - ".github/workflows/docker-build-push.yml"
      - "cmd/**"
      - "Dockerfile"
      - "go.mod"
      - "go.sum"
      - "internal/**"
      - "Makefile"
      - "test/**"
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  AWS_ACCOUNT_ID: 005622933699 # central account for DuraCloud images
  PROJECT_NAME: duracloud
  STACK_NAME: latest # image tag: using "STACK_NAME" here to re-use the make tasks

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 3
      fail-fast: false
      matrix:
        function:
          [
            bucket-requested,
            checksum-export-csv-report,
            checksum-exporter,
            checksum-failure,
            checksum-verification,
            file-deleted,
            file-uploaded,
            report-generator,
          ]
        region: [us-west-2, us-east-2]
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v5
        with:
          aws-region: ${{ matrix.region }}
          role-to-assume: arn:aws:iam::388502511949:role/github_actions
          role-session-name: oidc

      - name: Switch role to ECR build account
        uses: aws-actions/configure-aws-credentials@v5
        with:
          aws-region: ${{ matrix.region }}
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/DevOpsRole
          role-session-name: duracloud
          role-chaining: true

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2
        id: login-ecr

      - name: Build docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          build-args: FUNCTION_NAME=${{ matrix.function }}
          tags: ${{ env.PROJECT_NAME }}/${{ matrix.function }}:${{ env.STACK_NAME }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          load: true

      - name: Tag image for target region
        run: |
          docker tag \
            $PROJECT_NAME/${{ matrix.function }}:$STACK_NAME \
            $AWS_ACCOUNT_ID.dkr.ecr.${{ matrix.region }}.amazonaws.com/$PROJECT_NAME/${{ matrix.function }}:$STACK_NAME

      - name: Push docker image
        env:
          AWS_REGION: ${{ matrix.region }}
        run: make docker-push-function function=${{ matrix.function }}

name: Build and push DuraCloud function images

on:
  push:
    branches:
      - "main"
    paths:
      - ".github/workflows/docker-build-push.yml"
      - "cmd/**"
      - "Dockerfile"
      - "go.mod"
      - "go.sum"
      - "internal/**"
      - "Makefile"
      - "test/**"
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  AWS_ACCOUNT_ID: "005622933699" # central account for DuraCloud images
  AWS_REGION: us-west-2 # base region for builds and replication
  PROJECT_NAME: duracloud
  IMG_TAG: latest

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      fail-fast: false
      matrix:
        function:
          [
            bucket-requested,
            checksum-export-csv-report,
            checksum-exporter,
            checksum-failure,
            checksum-verification,
            file-deleted,
            file-uploaded,
            report-generator,
          ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          build-args: FUNCTION_NAME=${{ matrix.function }}
          tags: ${{ env.PROJECT_NAME }}/${{ matrix.function }}:${{ env.IMG_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          load: true

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v5
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: arn:aws:iam::388502511949:role/github_actions
          role-session-name: oidc

      - name: Switch role to ECR build account
        uses: aws-actions/configure-aws-credentials@v5
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/DevOpsRole
          role-session-name: duracloud
          role-chaining: true

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2
        id: login-ecr

      - name: Tag and push image
        run: |
          docker tag \
            $PROJECT_NAME/${{ matrix.function }}:$IMG_TAG \
            $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$PROJECT_NAME/${{ matrix.function }}:$IMG_TAG
          docker push \
            $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$PROJECT_NAME/${{ matrix.function }}:$IMG_TAG
